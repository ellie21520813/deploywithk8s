pipeline {
  agent any
  stages {
    stage('Checkout') {
      steps {
        sh 'echo passed 1'
      }
    }

    stage('Static Code Analysis') {
        environment {
            SONAR_URL = "http:98.84.150.86//:9000"
      }
      steps {
        withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
          sh '''
            sonar-scanner \
                -Dsonar.projectKey=your-project-key \
                -Dsonar.sources=. \
                -Dsonar.host.url=${SONAR_URL} \
                 -Dsonar.login=$SONAR_AUTH_TOKEN
            '''
        }
      }
    }
    stage('Build and Push Docker Image') {
      environment {
        DOCKER_IMAGE = "nh6462/lab2:${BUILD_NUMBER}"
        REGISTRY_CREDENTIALS = credentials('docker-cred')
      }
      steps {
        script {
            sh 'docker build -t ${DOCKER_IMAGE} .'
            def dockerImage = docker.image("${DOCKER_IMAGE}")
            docker.withRegistry('https://index.docker.io/v1/', "docker-cred") {
                dockerImage.push()
            }
        }
      }
    }
    stage('Deploy') {
        steps {
            echo 'Deploying....'
            sh 'minikube kubectl -- apply -f deployment.yaml'
            sh 'minikube kubectl -- apply -f service.yaml'
            }
        }
  }
}